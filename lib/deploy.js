// Generated by CoffeeScript 1.6.2
(function() {
  var Deploy, async, fs, jsdom, request;

  request = require('request');

  jsdom = require('jsdom');

  fs = require('fs');

  async = require('async');

  Deploy = (function() {
    function Deploy(username, password, server) {
      var _ref;

      this.username = username;
      this.password = password;
      this.server = server;
      if ((_ref = this.server) === null) {
        this.server = 'rally1.rallydev.com';
      }
    }

    Deploy.prototype.createNewPage = function(cpoid, name, content, tab, shared, callback) {
      var dashboardOid, panelOid, tasks, me = this;

      shared = (shared + "").toLowerCase();

      if (shared === 'true') {
        shared = 'on'
      } else if (shared !== 'on') {
        shared = 'off'
      }

      tasks = [
        me._login.bind(me), 
        function(res, body, cb) {
          //console.log("Login complete");

          var mtab, options;

          mtab = tab || 'myhome';
          options = {
            url: "https://" + me.server + "/slm/wt/edit/create.sp?cpoid=" + cpoid,
            method: 'POST',
            followAllRedirects: true,
            form: {
              name: name,
              type: 'DASHBOARD',
              timeboxFilter: 'none',
              pid: mtab,
              editorMode: 'create',
              cpoid: cpoid,
              version: 0,
              shared: shared
            }
          };
          return request(options, cb);
        }, 
        function(results, body, cb) {
          //console.log("Created new page");
          //console.log(results.statusCode);
          return jsdom.env(body, cb);
        }, 
        function(window, cb) {
          //console.log("Now I have the window");

          var oidElt, options, _ref;

          oidElt = window.document.getElementsByName('oid');
          dashboardOid = oidElt !== null ? (_ref = oidElt[0]) !== null ? _ref.value : void 0 : void 0;
          options = {
            url: "https://" + me.server + "/slm/panel/getCatalogPanels.sp?cpoid=" + cpoid + "&ignorePanelDefOids&gesture=getcatalogpaneldefs&_slug=/custom/" + dashboardOid,
            method: 'GET'
          };
          return request(options, cb);
        }, 
        function(results, body, cb) {
          //console.log("Fetched App Catalog")
          var options, p, panels, ptoid, _i, _len;

          panels = JSON.parse(body);
          for (_i = 0, _len = panels.length; _i < _len; _i++) {
            p = panels[_i];
            if (p.title === "Custom HTML") {
              ptoid = p.oid;
            }
          }
          options = {
            url: "https://" + me.server + "/slm/dashboard/addpanel.sp?cpoid=" + cpoid + "&_slug=/custom/" + dashboardOid,
            method: 'POST',
            followAllRedirects: true,
            form: {
              panelDefinitionOid: ptoid,
              col: 0,
              index: 0,
              dashboardName: "" + tab + dashboardOid,
              gestrure: 'addpanel'
            }
          };
          return request(options, cb);
        },
        function(results, body, cb) {
          //console.log("Created new panel");
          var options;

          panelOid = JSON.parse(body).oid;
          options = {
            url: "https://" + me.server + "/slm/dashboard/changepanelsettings.sp?cpoid=" + cpoid + "&_slug=/custom/" + dashboardOid,
            method: 'POST',
            followAllRedirects: true,
            form: {
              oid: panelOid,
              dashboardName: "" + tab + dashboardOid,
              settings: JSON.stringify({
                title: name,
                content: content
              }),
              gestrure: 'changepanelsettings'
            }
          };
          return request(options, cb);
        },
        function(results, body, cb) {
          //console.log("App was added");
          var options;

          options = {
            url: "https://" + me.server + "/slm/dashboardSwitchLayout.sp?cpoid=" + cpoid + "&layout=SINGLE&dashboardName=" + tab + dashboardOid + "&_slug=/custom/" + dashboardOid,
            method: 'GET'
          };
          return request(options, cb);
        }, function(results, body, cb) {
          //console.log("Done");
          return cb(null);
        }
      ];
      
      return async.waterfall(tasks, function(err) {
        //console.log("Any errors?");
        //console.dir(err);
        return callback(err, dashboardOid, panelOid);
      });
    };

    Deploy.prototype.updatePage = function(doid, poid, cpoid, name, tab, content, callback) {
      var me = this;
      return this._login(function(err, res, b) {
        var mtab, options;

        mtab = tab || 'myhome';
        options = {
          url: "https://" + me.server + "/slm/dashboard/changepanelsettings.sp?cpoid=" + cpoid + "&_slug=/custom/" + doid,
          method: 'POST',
          followAllRedirects: true,
          form: {
            oid: poid,
            dashboardName: "" + tab + doid,
            settings: JSON.stringify({
              title: name,
              content: content
            }),
            gestrure: 'changepanelsettings'
          }
        };
        return request(options, function(error, results, body) {
          return callback(error);
        });
      });
    };

    Deploy.prototype._login = function(callback) {
      var options;

      options = {
        url: "https://" + this.server + "/slm/webservice/v2.0/security/authorize",
        method: 'GET',
        followAllRedirects: true,
        headers: {
          Authorization: "Basic " + (new Buffer(this.username + ":" + this.password)).toString("base64")
        }
      };

      request.get(options, function (err, res, body) {
        //console.log(arguments);
        callback(err, res, body);
      });
    };

    return Deploy;

  })();

  exports.Deploy = Deploy;

}).call(this);
